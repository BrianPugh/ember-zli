name: Create tag and tarballs release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force:
        description: 'Force update release if tag already exists (re-adds tarballs from scratch)'
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Check if version already exists
        id: version-check
        run: |
          tag="v$(jq -r < package.json .version)"
          exists=$(gh api repos/${{ github.repository }}/releases/tags/$tag >/dev/null 2>&1 && echo "true" || echo "")

          if [ -n "$exists" ];
          then
            echo "Version $tag already exists"
            echo "::warning file=package.json,line=1::Version $tag already exists."
            echo "skipped=true" >> $GITHUB_OUTPUT
          else
            echo "Version $tag does not exist. Creating release..."
            echo "skipped=false" >> $GITHUB_OUTPUT
            echo "tag=$tag" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if needs to run
        if: |
          fromJSON(steps.version-check.outputs.skipped) && !fromJSON(inputs.force || "false")
        run: exit 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm install -g oclif

      - run: npm ci
      - run: npm run build:run

      - run: oclif pack tarballs -r . --prune-lockfiles

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.version-check.outputs.tag }}
          tag: ${{ steps.version-check.outputs.tag }}
          commit: ${{ github.ref_name }}
          generateReleaseNotes: true
          makeLatest: true
          allowUpdates: true
          removeArtifacts: true
          artifacts: "./dist/ember-zli-*"
